version: '3.8'

services:
  nuxt:
    build:
      context: ./front
      dockerfile: Dockerfile-front
    restart: unless-stopped
    networks:
      - web

  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db
    restart: on-failure
    networks:
      - web

  telegram-bot:
    env_file:
      - backend/.env
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile-bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    restart: unless-stopped
    depends_on:
      - django
    networks:
      - web

  db:
    image: postgres:16.4-alpine3.20
    env_file:
      - backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
    ports:
      - "5432:5432"
    networks:
      - web

volumes:
  postgres_data:

networks:
  web:
    driver: bridge
